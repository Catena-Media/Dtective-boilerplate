pipeline {
  agent {
      node {
        label 'my-server-node-in-jenkins'
      }
    }
  options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        skipDefaultCheckout()
    }
  stages {
    stage('checkout sources') {
      steps {
        sh 'docker-compose down || true'
        sh 'sudo git reset --hard || true'
        sh 'sudo git clean -fdx || true'
        checkout scm
      }
    }
    stage('build') {
      steps {
        sh 'docker-compose build'
      }
    }
    stage('deploy') {
      steps {
        sh 'docker-compose up -d'
      }
    }
    stage('test') {
      steps {
        sh 'docker-compose exec -T runner-chrome mvn compile test "-Dcucumber.options=--tags @DEV"'
      }
    }
  }
  post {
     always {
        sh 'docker-compose down'
        sh 'sudo chmod -R o+xw ./build/allure-results || true'

        allure includeProperties: false, jdk: '', results: [[path: 'build/allure-results']]

        cleanWs()
      }
     failure {
       slackSend channel: 'my-slack-channel', color: '#E01563', failOnError: true, message: "This is a TEST! Job: ${env.JOB_NAME}, build number: ${env.BUILD_NUMBER}", teamDomain: 'my-team', token: 'my-token'
     }
     success {
        slackSend channel: 'my-slack-channel', color: '#3EB991', failOnError: true, message: "This is a TEST! Job: ${env.JOB_NAME}, build number: ${env.BUILD_NUMBER}", teamDomain: 'my-team', token: 'my-token'
     }
  }
}